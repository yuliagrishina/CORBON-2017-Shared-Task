Программное обеспечение жизни
Будучи живыми , мы склонны думать , что жизнь легко постичь .
В принятой классификации наук математика считается королевой и самым трудным предметом для усвоения , за ней следуют физика , химия и , наконец , биология .
Но эта научная иерархия является ложной и обманчивой : теперь мы знаем , что в биологии содержится больше математики , чем мы когда-либо предполагали .
Когда с открытием ДНК молекулы вошли в научное понимание жизни , биология поднялась на одну ступень выше к химии .
Тогда с признанием абстрактных схем , диктующих , как выражены гены , биология поднялась еще ближе к математике .
В настоящее время специальный термин в исследовании жизни – это биология " систем " .
На протяжении долгого времени те , кто изучал природу жизни и наследственности , делились на два лагеря : эпигенетики , которые придавали особое значение экологическому влиянию на живые организмы , и преформисты , которые делали акцент на сходствах между родителями и потомством .
Точка зрения эпигенетиков была явно неправильной , потому что что-то устойчивое должно было передаваться из поколения в поколение .
Но взгляду преформистов , который заключался в том , что сущность , передаваемая из поколения в поколение , была целым организмом , противоречила невозможность бесконечной сегментации объектов .
То , что должно было передаваться , было не конечным организмом , а рецептом его создания .
Рассмотрите старую метафизическую головоломку : является ли деревянная лодка , доски которой постепенно заменялись по мере обветшалости , той же самой лодкой после того , как все ее доски были заменены ?
Биология " систем " – это биология , которая признает , что то , что остается неизменным – это модель лодки – определяет отношения между досками .
Эта мысль проложила путь к понятию “ генетической программы ” , похожей на компьютерную программу – метафора , которая стала почти очевидной , когда была открыта структура ДНК , потому что ДНК можно было отчетливо представить в виде линейной цепочки символов , как раз в точности то , что компьютеры распознают как программу .
Как и компьютерная программа , ДНК не сохраняет окончательный вид того , о чем она несет информацию ; она скорее символически , но точно ( это реальный " текст " ) запоминает отношения между всеми объектами и агентами , которые она определяет и контролирует .
Замечательное наблюдение поддерживает эту аналогию : вирусы ведут себя как отдельные части программ , используя клетку в качестве механизма , необходимого для того , чтобы заставить их размножаться и впоследствии распространяться ( часто , разрушая при этом механизм ) .
Когда компьютерное программирование стало широко распространенным , было обнаружено , что части программного обеспечения вели себя точно так же и , таким образом , их назвали " вирусами " .
А когда стало возможным подвергать ДНК воздействию в пробирке , метафора “ генетической программы ” оказалась еще более точной : ученые могли проводить эксперименты , которые соответствовали перепрограммированию клеток , с помощью простого воздействия на символы в кремнии .
Эта метафора происходит от известного математика и специалиста по вычислительной техники Алана Теринга , который вместе с Джоном фон Нойманном и другими теоретиками открыл связь между математикой целых чисел и логикой .
Теринг предложил , чтобы все вычисления и логические действия выполнялись простой машиной , которую он назвал Универсальной Машиной Теринга , распознающей и видоизменяющей линейную последовательность символов .
Для этого были необходимы лишь физическое отделение символов ( представленных в виде ленты ) , проводимое машиной , и сама машина .
Более того , лента передавала данные , которые позволяли машине продолжать работу .
Так что данные можно было разделить на два типа : программа со встроенным " значением " логической последовательности , признаваемая машиной , и чистые данные , которые обеспечивали контекст для работы программы .
Генная инженерия опирается на воздействие на молекулы ДНК ( неважно , реальные или искусственно созданные ) , чтобы перепрограммировать инородные клетки .
В результате многие бактерии в настоящее время производят человеческие белки .
Но это представляет только небольшую часть генетической программы .
Передача генов между организмами широко распространена .
Ядерное клонирование на примере овцы Долли сделало Универсальную Машину Теринга много раскрывающей , если не все объясняющей , моделью клетки .
Если мы возьмем номинальное значение этой метафоры , то обнаружим удивительное последствие , которое показало , что результат некоторых компьютерных программ является одновременно всецело детерминистическим , инновационным и непредсказуемым .
Компьютерная метафора , таким образом , подразумевает , что живые организмы – это материальные системы , которые , сталкиваясь с непредвиденным будущим , находят невероятные решения , чтобы часть их потомства могла выжить в непредсказуемых условиях .
Жизнь созидательна по своей сути .
Однако , метафора ограничена простым фактом : компьютеры не создают компьютеры .
Задача новой биологии заключается в том , чтобы понять , как они могли бы это сделать .
